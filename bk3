"use client";
import axios from "axios";
import { motion } from "framer-motion";
import Image from "next/image";
import { useState, useEffect } from "react";

interface Movie {
  title: string;
  year?: string;
  imdbID?: string;
  photo_url?: string;
}

function App() {
  const [results, setResults] = useState<Movie[]>([]);
  const [currentIndex, setCurrentIndex] = useState<number>(0);

  const itemsPerPage = 5; // แสดงภาพครั้งละ 5 ภาพ

  const fetchMovies = async () => {
    const options = {
      method: "GET",
      url: "https://imdb.iamidiotareyoutoo.com/justwatch",
      params: {
        q: "War",
      },
    };

    try {
      const { data } = await axios.request(options);

      const movies = Array.isArray(data.description)
        ? data.description.slice(0, 20).map((item: any) => ({
            title: item.title,
            year: item.year,
            imdbID: item.imdbId,
            photo_url: item.photo_url[0],
          }))
        : [];

      setResults(movies);
    } catch (error) {
      console.error("Error fetching movies:", error);
    }
  };

  const goToNext = () => {
    setCurrentIndex((prevIndex) => {
      return prevIndex === Math.ceil(results.length / itemsPerPage) - 1
        ? 0
        : prevIndex + 1;
    });
  };

  useEffect(() => {
    fetchMovies();
  }, []);

  return (
    <div className="w-full h-screen">
      <p className="text-lg ml-3">หนังใหม่มาแรง</p>
      <div className="relative flex flex-col items-center pt-6 overflow-x-hidden">
        <div className="overflow-hidden mdx:w-[150rem] xs:w-[100%] h-[20rem]">
          <div className="relative flex w-full">
            <motion.div
              className="flex gap-2 w-full overflow-x-auto"
              animate={{
                x: `-${currentIndex * 10}%`, // ขยับตาม currentIndex เท่านั้น
              }}
              transition={{
                type: "spring",
                stiffness: 100,
                damping: 25,
              }}>
              {results.length > 0 ? (
                results.map((movie, index) => (
                  <motion.div
                    key={index}
                    onClick={goToNext}
                    className="mdx:min-w-[16rem] xs:min-w-[100%] h-[20rem] cursor-pointer outline-none focus:outline-none">
                    {movie.photo_url && (
                      <Image
                        width={500}
                        height={500}
                        src={movie.photo_url}
                        alt={movie.title}
                        className="w-full h-full object-contain rounded-lg"
                      />
                    )}
                  </motion.div>
                ))
              ) : (
                <p>กำลังโหลด...</p>
              )}
            </motion.div>
          </div>
        </div>

        {/* กรณีที่ต้องการแสดง indicator (สามารถปรับแต่งได้ตามต้องการ) */}
        <div className="flex flex-grow gap-1 mt-6">
          {Array.from({
            length: Math.ceil(results.length / itemsPerPage),
          }).map((_, index) => (
            <div key={index} className="h-0.5 w-6 bg-white">
              {index === currentIndex && (
                <div className="h-0.5 w-6 bg-gradient-to-r from-purple-900 to-fuchsia-800" />
              )}
            </div>
          ))}
        </div>
      </div>
    </div>
  );
}

export default App;
